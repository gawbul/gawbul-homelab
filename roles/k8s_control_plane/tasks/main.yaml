---
# This playbook contains plays that will be run on the control plane nodes.

- name: Download the Kubernetes components
  block:
    - name: Download the Kubernetes files
      become: true
      ansible.builtin.get_url:
        url: https://dl.k8s.io/v{{ k8s_version }}/bin/linux/{{ system_architecture }}/{{ item }}
        dest: /usr/local/bin/{{ item }}
        mode: '0755'
      with_items:
        - kube-apiserver
        - kube-controller-manager
        - kube-scheduler
      tags: kubernetes

    - name: Download etcd
      become: true
      ansible.builtin.get_url:
        url: https://github.com/etcd-io/etcd/releases/download/v{{ etcd_version }}/etcd-v{{ etcd_version }}-linux-{{ system_architecture }}.tar.gz
        dest: /tmp/etcd-v{{ etcd_version }}-linux-{{ system_architecture }}.tar.gz
      tags: etcd

    - name: Extract etcd archive
      become: true
      ansible.builtin.unarchive:
        src: /tmp/etcd-v{{ etcd_version }}-linux-{{ system_architecture }}.tar.gz
        dest: /tmp
        remote_src: true
      tags: etcd

    - name: Copy the etcd files in to place
      become: true
      ansible.builtin.copy:
        src: /tmp/etcd-v{{ etcd_version }}-linux-{{ system_architecture }}/{{ item }}
        dest: /usr/local/bin/{{ item }}
        remote_src: yes
        mode: '0755'
      with_items:
        - etcd
        - etcdctl
        - etcdutl
      tags: etcd

- name: Ensure the etcd directories exist
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0700'
    recurse: true
    state: directory
  with_items:
    - /etc/etcd
    - /var/lib/etcd
  tags: etcd

- name: Copy the etcd SSL certificates in to place
  become: true
  ansible.builtin.copy:
    src: certs/{{ item}}
    dest: /etc/etcd/{{ item }}
    mode: '0644'
  with_items:
    - ca.crt
    - kube-api-server.crt
    - kube-api-server.key
  tags: etcd

- name: Copy the etcd service file in to place
  become: true
  ansible.builtin.copy:
    src: etcd.service
    dest: /etc/systemd/system/etcd.service
    mode: '0644'
  tags: etcd

- name: Start the etcd service
  become: true
  ansible.builtin.service:
    name: etcd
    daemon_reload: true
    enabled: true
    state: started
  tags: etcd

- name: Create the kubernetes directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    mode: '0700'
    state: directory
  with_items:
    - /etc/kubernetes/config
    - /var/lib/kubernetes
  tags: kubernetes

- name: Copy the kubernetes SSL certificates in to place
  become: true
  ansible.builtin.copy:
    src: certs/{{ item}}
    dest: /var/lib/kubernetes/{{ item }}
    mode: '0644'
  with_items:
    - ca.crt
    - ca.key
    - kube-api-server.crt
    - kube-api-server.key
    - service-accounts.crt
    - service-accounts.key
  tags: kubernetes

- name: Copy the encryption configuration in to place
  become: true
  ansible.builtin.copy:
    src: encryption-config.yaml
    dest: /var/lib/kubernetes/encryption-config.yaml
    mode: '0644'
  tags: kubernetes

- name: Copy the api server and controller manager service files in to place
  become: true
  ansible.builtin.template:
    src: "{{ item }}.service.j2"
    dest: /etc/systemd/system/{{ item }}.service
    mode: '0644'
  with_items:
    - kube-apiserver
    - kube-controller-manager
  tags: kubernetes

- name: Copy the controller manager and scheduler kube config files in to place
  become: true
  ansible.builtin.copy:
    src: kubeconfig/{{ item }}.kubeconfig
    dest: /var/lib/kubernetes/{{ item }}.kubeconfig
    mode: '0644'
  with_items:
    - kube-controller-manager
    - kube-scheduler
  tags: kubernetes

- name: Copy the scheduler service in to place
  become: true
  ansible.builtin.copy:
    src: kube-scheduler.service
    dest: /etc/systemd/system/kube-scheduler.service
    mode: '0644'
  tags: kubernetes

- name: Copy the scheduler configuration in to place
  become: true
  ansible.builtin.copy:
    src: kube-scheduler.yaml
    dest: /etc/kubernetes/config/kube-scheduler.yaml
    mode: '0644'
  tags: kubernetes

- name: Start the control plane services
  become: true
  ansible.builtin.service:
    name: "{{ item }}"
    daemon_reload: true
    enabled: true
    state: started
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
  tags: etcd

- name: Copy the admin kube config in to place
  become: true
  ansible.builtin.copy:
    src: kubeconfig/admin.kubeconfig
    dest: /tmp/admin.kubeconfig
    mode: '0644'
  tags: kubernetes

- name: Copy the RBAC permissions in to place
  become: true
  ansible.builtin.copy:
    src: kube-apiserver-to-kubelet.yaml
    dest: /tmp/kube-apiserver-to-kubelet.yaml
    mode: '0644'
  tags: kubernetes

- name: Apply the RBAC permissions to the cluster
  become: true
  ansible.builtin.command: kubectl apply -f /tmp/kube-apiserver-to-kubelet.yaml --kubeconfig /tmp/admin.kubeconfig
  tags: kubernetes

- name: Add network routes for the pod networks
  become: true
  ansible.builtin.command: "ip route add {{ item.value['node_info'].pod_subnet }} via {{ item.value['node_info'].ip_address }}"
  when: item.key != inventory_hostname
  loop: "{{ nodes | dict2items }}"
  tags: kubernetes