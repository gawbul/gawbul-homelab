---
# This playbook contains plays that will be run locally.

- name: Set the local kube config
  ansible.builtin.command: mise run kubeconfig-local-generate

- name: Apply node labels
  ansible.builtin.shell: |
    kubectl label node eniac-node1 node-role.kubernetes.io/control-plane=control-plane
    kubectl label node eniac-node2 node-role.kubernetes.io/worker=worker
    kubectl label node eniac-node3 node-role.kubernetes.io/worker=worker
    kubectl label node eniac-node4 node-role.kubernetes.io/worker=worker

- name: Taint control plane to allow scheduling only certain jobs
  ansible.builtin.shell: |
    kubectl taint nodes eniac-node1 node-role.kubernetes.io/control-plane:NoSchedule

- name: Install CoreDNS
  ansible.builtin.shell: |
    helm repo add coredns https://coredns.github.io/helm --force-update
    helm upgrade --install coredns coredns/coredns --namespace=kube-system --set service.clusterIP="10.32.0.10"
    kubectl wait deployments/coredns --namespace=kube-system --for=condition=Available --timeout=300s

- name: Install the local-path-provisioner
  ansible.builtin.shell: |
    kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.31/deploy/local-path-storage.yaml
    kubectl wait deployments/local-path-provisioner --namespace=local-path-storage --for=condition=Available --timeout=300s

- name: Install the NFS CSI driver
  ansible.builtin.shell: |
    helm repo add csi-driver-nfs https://raw.githubusercontent.com/kubernetes-csi/csi-driver-nfs/master/charts --force-update
    helm upgrade --install csi-driver-nfs csi-driver-nfs/csi-driver-nfs --namespace kube-system --version v{{ csi_driver_version }}
    kubectl wait deployments/csi-nfs-controller --namespace=kube-system --for=condition=Available --timeout=300s

- name: Move StorageClass file into place
  ansible.builtin.template:
    src: storage-class.yaml.j2
    dest: /tmp/storage-class.yaml

- name: Install the StorageClass
  ansible.builtin.command: kubectl apply -f /tmp/storage-class.yaml

- name: Install cert-manager
  ansible.builtin.shell: |
    helm repo add jetstack https://charts.jetstack.io --force-update
    helm upgrade --install cert-manager jetstack/cert-manager --namespace cert-manager --create-namespace --version v1.17.0 --set crds.enabled=true --set global.leaderElection.namespace=cert-manager
    kubectl wait deployments/cert-manager --namespace=cert-manager --for=condition=Available --timeout=300s
    kubectl wait deployments/cert-manager-cainjector --namespace=cert-manager --for=condition=Available --timeout=300s
    kubectl wait deployments/cert-manager-webhook --namespace=cert-manager --for=condition=Available --timeout=300s

- name: Install Metrics Server
  ansible.builtin.shell: |
    helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/ --force-update
    helm upgrade --install metrics-server metrics-server/metrics-server
    kubectl wait deployments/metrics-server --for=condition=Available --timeout=300s